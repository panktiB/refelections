What happens when you initialize a repository? Why do you need to do it?
when you initialize a new repo, and empty repo gets created. we may need to add our files to it.

How is the staging area different from the working directory and the repository? What value do you think it offers?
the staging area is where we add files that have a related logical change in them. in the working directory all the files 
are present whether or not they have any change and the repository contains all the files and their history. using
the staging area to decide which files need to be committed is very useful

How can you use the staging area to make sure you have one commit per logical change?
whatever files we add to the staging area must all be related to the one logical change we have introduced. 
no other extra files must be included in this.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
if i want to try out some code but not completely sure about it maybe it might break my website or app then i'd 
prefer it to be branched out so that whatever i have acheieved till now doesn't spoil.

How do the diagrams help you visualize the branch structure?
diagrams show us how each commit is connected to each other and show us where each branch is located.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
the result is that it makes a new commit with all the changes in the individual branches. we represent it like this to show
which the parents of the merged commit we created. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
i don't know